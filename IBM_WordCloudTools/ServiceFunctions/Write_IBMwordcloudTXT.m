function [SavePath_InputTXT,SavePath_ConfigTXT] = Write_IBMwordcloudTXT(InputFileCStr,ConfigFileCStr,SavePath_InputTXT,SavePath_ConfigTXT)
% This function writes the Cellstrings generated by Create_IBMwordcloud_InputNConfig
% to txt files that can then be used for running IBMwordcloud.
%
%
%V1.0
%Author: Rainer Boegle (Rainer.Boegle@googlemail.com)
%Comment(31.January.2015): initial implementation based on test script.

%% check inputs
try
    if(~isempty(SavePath_InputTXT)) %allow that input is not written out if someone just wants to get a configuration file written out.
        if((~isempty(strfind(strtrim(SavePath_InputTXT),' ')))||(~isempty(strfind(strtrim(SavePath_InputTXT),'&'))))
            H = helpdlg({'WHITESPACES '' '' or ''&'' are not allowed in the Input.TXT save path!!!'; 'You have to save the file in a path that does not contain WHITESPACES or ''&''.'},'No WHITESPACES or ''&'' allowed!');
            uiwait(H);
            return;
        else
            [SavePath_InputTXT_dir,SavePath_InputTXT_fname,SavePath_InputTXT_ext] = fileparts(SavePath_InputTXT);
            if(~exist(SavePath_InputTXT_dir))
                mkdir(SavePath_InputTXT_dir);
            end
            if(~strcmpi(SavePath_InputTXT_ext,'.txt'))
                SavePath_InputTXT = [SavePath_InputTXT_dir,filesep,SavePath_InputTXT_fname,'.txt'];
            end
        end
    end
catch CATCH_InputTXT
    disp_catch(CATCH_InputTXT);
    [SavePath_InputTXT_fname,SavePath_InputTXT_dir,FilterIndex] = uiputfile('*.txt','Select path for saving Input.txt-file...','Input.txt');
    if(FilterIndex~=0)
        SavePath_InputTXT = [SavePath_InputTXT_dir,filesep,SavePath_InputTXT_fname];
    else
        SavePath_InputTXT = [];
    end
end
try
    if((~isempty(strfind(strtrim(SavePath_ConfigTXT),' ')))||(~isempty(strfind(strtrim(SavePath_ConfigTXT),'&'))))
        H = helpdlg({'WHITESPACES '' '' or ''&'' are not allowed in the Config.TXT save path!!!'; 'You have to save the file in a path that does not contain WHITESPACES or ''&''.'},'No WHITESPACES or ''&'' allowed!');
        uiwait(H);
        return;
    else
        [SavePath_ConfigTXT_dir,SavePath_ConfigTXT_fname,SavePath_ConfigTXT_ext] = fileparts(SavePath_ConfigTXT);
        if(~exist(SavePath_ConfigTXT_dir))
            mkdir(SavePath_ConfigTXT_dir);
        end
        if(~strcmpi(SavePath_ConfigTXT_ext,'.txt'))
            SavePath_ConfigTXT = [SavePath_ConfigTXT_dir,filesep,SavePath_ConfigTXT_fname,'.txt'];
        end
    end
catch CATCH_ConfigTXT
    disp_catch(CATCH_ConfigTXT);
    FilterIndex = 0;
    while(FilterIndex==0)
        [SavePath_ConfigTXT_fname,SavePath_ConfigTXT_dir,FilterIndex] = uiputfile('*.txt','Select path for saving CONFIG.txt-file...','CONFIG.txt');
        SavePath_ConfigTXT = [SavePath_ConfigTXT_dir,filesep,SavePath_ConfigTXT_fname];
    end
end

%% write Input.txt if save path not empty
if(~isempty(SavePath_InputTXT))
    Status = WriteInputTXT(InputFileCStr,SavePath_InputTXT);
    if(Status)
        disp('Writing of Input.txt was successful.');
        disp(SavePath_InputTXT);
    else
        disp('Writing of Input.txt NOT successful!');
    end
end

%% write config.txt
Status = WriteConfigTXT(ConfigFileCStr,SavePath_ConfigTXT);
if(Status)
    disp('Writing of Config.txt was successful.');
    disp(SavePath_ConfigTXT);
else
    disp('Writing of Config.txt NOT successful!');
end


end

%% subfunction
%% Status = WriteInputTXT(InputFileCStr,SavePath_InputTXT);
function Status = WriteInputTXT(InputFileCStr,SavePath_InputTXT)
%% check write status & write text to file
Status = 0; %init as failed
fid = fopen(SavePath_InputTXT,'w');  %# Open the file (or create)
if fid ~= -1
    try
        if(size(InputFileCStr,2)==1)
            WriteInputTXT_text(InputFileCStr,fid);
        else
            if(size(InputFileCStr,2)==3)
                WriteInputTXT_tab(InputFileCStr,fid);
            else
                error(['"InputFileCStr" has the wrong size! (',num2str(size(InputFileCStr)),') Should either be (N-x-1) or (N-x-3).']);
            end
        end
        fclose(fid);                     %# Close the file
        Status = 1;
    catch CATCH_WriteInputTXT
        disp_catch(CATCH_WriteInputTXT,'WriteInputTXT');
        fclose(fid);                     %# Close the file
        Status = 0;
    end
else
    disp(' ');
    disp('Writing of strings to Input.TXT-file failed.');
    disp(' ');
end

end
%% [] = WriteInputTXT_text(InputFileCStr,fid);
function [] = WriteInputTXT_text(InputFileCStr,fid)
switch(computer)
    case {'PCWIN64','PCWIN32','PCWIN'}
        FormatStr = '%s\r\n';
    case {'MACI64','MAC'}
        FormatStr = '%s\n';
    case {'GLNXA64','GLNXA32','GLNXA'}
        FormatStr = '%s\n';
end
for Ind = 1:length(InputFileCStr)
    str = InputFileCStr{Ind};
    fprintf(fid,FormatStr,str);   %# Print the string
end

end
%% [] = WriteInputTXT_tab(InputFileCStr,fid);
function [] = WriteInputTXT_tab(InputFileCStr,fid)
switch(computer)
    case {'PCWIN64','PCWIN32','PCWIN'}
        FormatStr = '%s\t%s\t%s\r\n';
    case {'MACI64','MAC'}
        FormatStr = '%s\t%s\t%s\n';
    case {'GLNXA64','GLNXA32','GLNXA'}
        FormatStr = '%s\t%s\t%s\n';
end
for Ind = 1:size(InputFileCStr,1)
    word   = InputFileCStr{Ind,1};
    weight = InputFileCStr{Ind,2};
    color  = InputFileCStr{Ind,3};
    if(~ischar(weight))
        weight = num2str(weight);
    end
    fprintf(fid,FormatStr,word,weight,color);   %# Print the string
end

end

%% Status = WriteConfigTXT(ConfigFileCStr,SavePath_ConfigTXT);
function Status = WriteConfigTXT(ConfigFileCStr,SavePath_ConfigTXT)
%% check input
if(size(ConfigFileCStr,2)~=2)
    error('"ConfigFileCStr" must be {N-x-2}!');
end
%% check write status & write text to file
Status = 0; %init as failed
fid = fopen(SavePath_ConfigTXT,'w');         %# Open the file (or create)
if fid ~= -1
    try
    for Ind = 1:size(ConfigFileCStr,1)
        command = ConfigFileCStr{Ind,1};
        setting = ConfigFileCStr{Ind,2};
        fprintf(fid,'%s:\t%s\r\n',strtrim(command),strtrim(setting));   %# Print the string
    end
    fclose(fid);                     %# Close the file
    Status = 1;
    catch CATCH_WriteConfigTXT
        disp_catch(CATCH_WriteConfigTXT,'WriteConfigTXT');
        fclose(fid);                     %# Close the file
        Status = 0;
    end
else
    disp(' ');
    disp('Writing of strings to Config.TXT-file failed.');
    disp(' ');
end

end

%% disp_catch
function [] = disp_catch(CATCHobj,varargin)
if(nargin==2)
    disp(['Error occurred in function "',mfilename,'>',varargin{1},'"...']);
else
    disp(['Error occurred in function "',mfilename,'"...']);
end
disp([CATCHobj.identifier,': ',CATCHobj.message]);

end